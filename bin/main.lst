                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : FreeWare ANSI-C Compiler
                              3 ; Version 2.3.1 Thu May  7 14:12:24 2020
                              4 
                              5 ;--------------------------------------------------------
                              6 	.module lcc63790
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _main
                             12 ;--------------------------------------------------------
                             13 ; special function registers
                             14 ;--------------------------------------------------------
                             15 ;--------------------------------------------------------
                             16 ; special function bits 
                             17 ;--------------------------------------------------------
                             18 ;--------------------------------------------------------
                             19 ; internal ram data
                             20 ;--------------------------------------------------------
                             21 	.area _DATA
                             22 ;--------------------------------------------------------
                             23 ; overlayable items in internal ram 
                             24 ;--------------------------------------------------------
                             25 	.area _OVERLAY
                             26 ;--------------------------------------------------------
                             27 ; indirectly addressable internal ram data
                             28 ;--------------------------------------------------------
                             29 	.area _ISEG
                             30 ;--------------------------------------------------------
                             31 ; bit data
                             32 ;--------------------------------------------------------
                             33 	.area _BSEG
                             34 ;--------------------------------------------------------
                             35 ; external ram data
                             36 ;--------------------------------------------------------
                             37 	.area _XSEG
                             38 ;--------------------------------------------------------
                             39 ; global & static initialisations
                             40 ;--------------------------------------------------------
                             41 	.area _GSINIT
                             42 	.area _GSFINAL
                             43 	.area _GSINIT
                             44 ;--------------------------------------------------------
                             45 ; Home
                             46 ;--------------------------------------------------------
                             47 	.area _HOME
                             48 	.area _CODE
                             49 ;--------------------------------------------------------
                             50 ; code
                             51 ;--------------------------------------------------------
                             52 	.area _CODE
                             53 ;	src/main.c 5
                             54 ;	genLabel
                             55 ;	genFunction
                             56 ;	---------------------------------
                             57 ; Function main
                             58 ; ---------------------------------
   0000                      59 ___main_start:
   0000                      60 _main:
   0000 E8 FD                61 	lda	sp,-3(sp)
                             62 ;	src/main.c 7
                             63 ;	genIpush
                             64 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0002 21 3E 00             65 	ld	hl,#_sprite
   0005 E5                   66 	push	hl
                             67 ;	genIpush
   0006 21 00 01             68 	ld	hl,#0x0100
   0009 E5                   69 	push	hl
                             70 ;	genCall
   000A CD 00 00             71 	call	_set_sprite_data
   000D E8 04                72 	lda	sp,4(sp)
                             73 ;	src/main.c 8
                             74 ;	genIpush
                             75 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   000F 21 00 00             76 	ld	hl,#0x0000
   0012 E5                   77 	push	hl
                             78 ;	genCall
   0013 CD 00 00             79 	call	_set_sprite_tile
   0016 E8 02                80 	lda	sp,2(sp)
                             81 ;	src/main.c 9
                             82 ;	genIpush
                             83 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0018 21 58 4E             84 	ld	hl,#0x4E58
   001B E5                   85 	push	hl
                             86 ;	genIpush
   001C 3E 00                87 	ld	a,#0x00
   001E F5                   88 	push	af
   001F 33                   89 	inc	sp
                             90 ;	genCall
   0020 CD 00 00             91 	call	_move_sprite
   0023 E8 03                92 	lda	sp,3(sp)
                             93 ;	src/main.c 10
                             94 ;	genAssign
   0025 01 40 FF             95 	ld	bc,#0xFF40
                             96 ;	genAssign
                             97 ;	AOP_STK for _main_sloc0_1_0
   0028 F8 01                98 	lda	hl,1(sp)
   002A 36 40                99 	ld	(hl),#0x40
   002C 23                  100 	inc	hl
   002D 36 FF               101 	ld	(hl),#0xFF
                            102 ;	genPointerGet
                            103 ;	AOP_STK for _main_sloc0_1_0
                            104 ;	AOP_STK for _main_sloc1_1_0
   002F 2B                  105 	dec	hl
   0030 5E                  106 	ld	e,(hl)
   0031 23                  107 	inc	hl
   0032 56                  108 	ld	d,(hl)
   0033 1A                  109 	ld	a,(de)
   0034 2B                  110 	dec	hl
   0035 2B                  111 	dec	hl
                            112 ;	genOr
                            113 ;	AOP_STK for _main_sloc1_1_0
   0036 77                  114 	ld      (hl),a
   0037 7F                  115 	ld      a,a
   0038 F6 02               116 	or	a,#0x02
                            117 ;	genAssign (pointer)
   003A 02                  118 	ld	(bc),a
                            119 ;	genLabel
   003B                     120 00101$:
                            121 ;	genEndFunction
   003B E8 03               122 	lda	sp,3(sp)
   003D C9                  123 	ret
   003E                     124 ___main_end:
   003E                     125 _sprite:
   003E 67 67               126 	.dw #0x6767
   0040 00 00               127 	.dw #0x0000
   0042 00 00               128 	.dw #0x0000
   0044 00 00               129 	.dw #0x0000
   0046 00 00               130 	.dw #0x0000
   0048 00 00               131 	.dw #0x0000
   004A 00 00               132 	.dw #0x0000
   004C 67 67               133 	.dw #0x6767
   004E 67 67               134 	.dw #0x6767
   0050 00 00               135 	.dw #0x0000
   0052 00 00               136 	.dw #0x0000
   0054 00 00               137 	.dw #0x0000
   0056 00 00               138 	.dw #0x0000
   0058 00 00               139 	.dw #0x0000
   005A 00 00               140 	.dw #0x0000
   005C 67 67               141 	.dw #0x6767
   005E 67 67               142 	.dw #0x6767
   0060 00 00               143 	.dw #0x0000
   0062 00 00               144 	.dw #0x0000
   0064 67 67               145 	.dw #0x6767
   0066 67 67               146 	.dw #0x6767
   0068 00 00               147 	.dw #0x0000
   006A 00 00               148 	.dw #0x0000
   006C 67 67               149 	.dw #0x6767
   006E 67 67               150 	.dw #0x6767
   0070 00 00               151 	.dw #0x0000
   0072 67 67               152 	.dw #0x6767
   0074 00 00               153 	.dw #0x0000
   0076 00 00               154 	.dw #0x0000
   0078 67 67               155 	.dw #0x6767
   007A 00 00               156 	.dw #0x0000
   007C 67 67               157 	.dw #0x6767
   007E 67 67               158 	.dw #0x6767
   0080 00 00               159 	.dw #0x0000
   0082 00 00               160 	.dw #0x0000
   0084 00 00               161 	.dw #0x0000
   0086 00 00               162 	.dw #0x0000
   0088 00 00               163 	.dw #0x0000
   008A 00 00               164 	.dw #0x0000
   008C 67 67               165 	.dw #0x6767
   008E 67 67               166 	.dw #0x6767
   0090 00 00               167 	.dw #0x0000
   0092 67 67               168 	.dw #0x6767
   0094 00 00               169 	.dw #0x0000
   0096 00 00               170 	.dw #0x0000
   0098 67 67               171 	.dw #0x6767
   009A 00 00               172 	.dw #0x0000
   009C 67 67               173 	.dw #0x6767
   009E 67 67               174 	.dw #0x6767
   00A0 00 00               175 	.dw #0x0000
   00A2 00 00               176 	.dw #0x0000
   00A4 67 67               177 	.dw #0x6767
   00A6 67 67               178 	.dw #0x6767
   00A8 00 00               179 	.dw #0x0000
   00AA 00 00               180 	.dw #0x0000
   00AC 67 67               181 	.dw #0x6767
   00AE 67 67               182 	.dw #0x6767
   00B0 00 00               183 	.dw #0x0000
   00B2 00 00               184 	.dw #0x0000
   00B4 00 00               185 	.dw #0x0000
   00B6 00 00               186 	.dw #0x0000
   00B8 00 00               187 	.dw #0x0000
   00BA 00 00               188 	.dw #0x0000
   00BC 67 67               189 	.dw #0x6767
                            190 	.area _CODE
ASxxxx Assembler V01.75  (GameBoy Z80-like CPU), page 1.

Symbol Table

  0 ___main_end                        003E R
  0 ___main_start                      0000 R
  0 _main                              0000 GR
    _move_sprite                       **** GX
    _set_sprite_data                   **** GX
    _set_sprite_tile                   **** GX
  0 _sprite                            003E R

ASxxxx Assembler V01.75  (GameBoy Z80-like CPU), page 2.

Area Table

   0 _CODE                              size   BE   flags 0
   1 _DATA                              size    0   flags 0
   2 _OVERLAY                           size    0   flags 0
   3 _ISEG                              size    0   flags 0
   4 _BSEG                              size    0   flags 0
   5 _XSEG                              size    0   flags 0
   6 _GSINIT                            size    0   flags 0
   7 _GSFINAL                           size    0   flags 0
   8 _HOME                              size    0   flags 0
